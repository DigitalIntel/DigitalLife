<MudGrid>
    <MudItem xs="12">
        <MudGrid Spacing="@spacing" Justify="Justify.Center">
            <MudItem>
                <MudPaper />
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Heart Beat</MudText>
                        
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Settings" Color="Color.Default" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>This day everything happend.</MudText>
                        <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem>
                <MudPaper />
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">The Story Book</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Settings" Color="Color.Default" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>This day everything happend.</MudText>
                        <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem>
                <MudPaper />
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">The Story Book</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Settings" Color="Color.Default" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>This day everything happend.</MudText>
                        <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>
<MudPaper Class="demo-grid-paper" Elevation="0">
    <MudButton Color="Color.Primary" OnClick="@AddSpacing">Change Spacing</MudButton>
    <MudAppBarSpacer></MudAppBarSpacer>
    <MudText>Spacing: @spacing</MudText>
</MudPaper>
@code {

    [Parameter]
    public IJSObjectReference mainLocalJs { get; set; }

    private IJSObjectReference UIbot { get; set; }
    private IJSObjectReference CLIbot { get; set; }




    public int spacing { get; set; } = 2;

    void AddSpacing()
    {
        if (spacing >= 10)
        {
            spacing = 0;
        }
        else
        {
            spacing += 1;
        }
        StateHasChanged();
    }

    async void Reboot()
    {

        UIbot = await mainLocalJs.InvokeAsync<IJSObjectReference>("HelloFromLiveState", "ActiveComponentBot", DotNetObjectReference.Create(this));

    }

    public class UpdateRequest
    {
        public IJSObjectReference CLIman { get; set; }
        public IJSObjectReference UIman { get; set; }
        public string Exchange { get; set; }

    }


    [JSInvokable]
    public async Task helloBack_LiveStateHandler(object ob)
    {
    // Console.WriteLine(ob);
        UpdateRequest a = Utf8Json.JsonSerializer.Deserialize<UpdateRequest>(ob.ToString());
        Console.WriteLine("deserialized" + a.CLIman.ToString() + " " + a.UIman.ToString());




    }

}