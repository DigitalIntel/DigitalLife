@page "/serverTime"
@using System.Threading
@inherits LiveComponentBase<DateTime>
@inject ITimeService Time

@{
    var time = State.LastValue.Format();
    var error = State.Error;
}



@* <StatefulComponentState Component="@this" /> *@
@* @if (error != null) { *@
@*     <div class="alert alert-warning" role="alert"> *@
@*         Update error: @error.Message *@
@*     </div> *@
@* } *@

 @time 

@* <button class="btn btn-primary" @onclick="() => State.CancelUpdateDelay()">Diconnect</button> *@

@code {
    protected override void OnInitialized()
    {
        StateHasChangedTriggers = StateEventKind.All;
        base.OnInitialized();
    }

    protected override void ConfigureState(LiveState<DateTime>.Options options)
        => options.WithUpdateDelayer(0.5);

    protected override Task<DateTime> ComputeStateAsync(CancellationToken cancellationToken)
        => Time.GetTimeAsync(cancellationToken);

}
